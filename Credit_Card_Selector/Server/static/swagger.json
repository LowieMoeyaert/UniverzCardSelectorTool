{"swagger": "2.0", "info": {"title": "Credit Card Selector API", "description": "API for selecting and managing credit cards", "version": "1.0.0"}, "basePath": "/", "schemes": ["http"], "consumes": ["application/json"], "produces": ["application/json"], "paths": {"/api/v1/process_survey": {"post": {"summary": "Process survey response", "description": "Process a survey response and return recommended credit cards based on user preferences. The survey collects information about spending habits, income, credit score, and preferences for rewards, interest rates, and Islamic banking options. The system uses this information to filter and rank credit cards that best match the user's profile.", "parameters": [{"name": "body", "in": "body", "description": "Survey response data containing user preferences and financial information. Each field helps determine the most suitable credit cards.", "required": true, "schema": {"type": "object", "properties": {"Card_Usage": {"type": "string", "description": "Primary purpose for the credit card (e.g., 'Luxury spending', 'Daily expenses', 'Business', 'Travel')"}, "Frequency": {"type": "string", "description": "How often the card will be used (e.g., 'Daily', 'Weekly', 'Monthly')"}, "Interest_Rate_Importance": {"type": "string", "description": "How important interest rates are to the user (e.g., 'Low', 'Medium', 'High')"}, "Credit_Score": {"type": "number", "description": "User's credit score (typically 0-100)"}, "Monthly_Income": {"type": "string", "description": "User's monthly income in AED"}, "Minimum_Income": {"type": "string", "description": "Minimum income requirement the user can meet in AED"}, "Interest_Rate": {"type": "string", "description": "Preferred maximum interest rate as a percentage"}, "Rewards": {"type": "string", "description": "Preferred reward type (e.g., 'Travel Miles', 'Cashback', 'Points')"}, "Islamic": {"type": "number", "description": "Whether Islamic banking options are required (1 for yes, 0 for no)"}}, "examples": {"luxury_traveler": {"summary": "Luxury Traveler Profile", "value": {"Card_Usage": "Luxury spending", "Frequency": "Daily", "Interest_Rate_Importance": "Low", "Credit_Score": 95, "Monthly_Income": "20000", "Minimum_Income": "25000", "Interest_Rate": "20", "Rewards": "Travel Miles", "Islamic": 1}}, "everyday_user": {"summary": "Everyday User Profile", "value": {"Card_Usage": "Daily expenses", "Frequency": "Weekly", "Interest_Rate_Importance": "High", "Credit_Score": 75, "Monthly_Income": "10000", "Minimum_Income": "8000", "Interest_Rate": "15", "Rewards": "Cashback", "Islamic": 0}}}}}], "responses": {"200": {"description": "Successful operation", "schema": {"type": "object", "properties": {"recommended_cards": {"type": "array", "description": "List of credit cards recommended based on the survey responses", "items": {"type": "object", "properties": {"Card_ID": {"type": "string", "description": "Unique identifier for the credit card"}, "Card_Type": {"type": "string", "description": "Type or category of the credit card"}, "Card_Network": {"type": "string", "description": "Payment network (e.g., Visa, Mastercard)"}, "Reason For Choice": {"type": "string", "description": "Explanation of why this card was recommended"}}}}}, "examples": {"luxury_traveler_response": {"summary": "Luxury Traveler Recommendations", "value": {"recommended_cards": [{"Card_ID": "ADCB_Traveller_Credit_Card", "Card_Type": "Traveller Credit Card", "Card_Network": "Visa", "Reason For Choice": "Best for travel rewards and luxury spending"}, {"Card_ID": "ADIB_Etihad_Guest_Visa_Platinum_Card", "Card_Type": "Platinum Card", "Card_Network": "Visa", "Reason For Choice": "Islamic option with excellent travel benefits"}]}}, "everyday_user_response": {"summary": "Everyday User Recommendations", "value": {"recommended_cards": [{"Card_ID": "RAKBANK_Cashback_Card", "Card_Type": "Cashback Card", "Card_Network": "Mastercard", "Reason For Choice": "Excellent cashback on daily expenses"}, {"Card_ID": "Emirates_NBD_Go4it_Card", "Card_Type": "Rewards Card", "Card_Network": "Visa", "Reason For Choice": "Good rewards for everyday spending with low fees"}]}}}}}, "400": {"description": "Bad request", "schema": {"type": "object", "example": {"error": "No JSON data received."}}}, "500": {"description": "Internal server error", "schema": {"type": "object", "example": {"error": "Error processing survey: Invalid data format."}}}}}}, "/api/v1/credit_cards": {"post": {"summary": "Update credit card database", "description": "Update the database with the latest CSV data", "responses": {"200": {"description": "Successful operation"}, "500": {"description": "Internal server error"}}}, "get": {"summary": "Get all credit cards from the database.", "description": "Get all credit cards from the database.\n---\ntags:\n  - Credit Cards\nresponses:\n  200:\n    description: List of all credit cards\n  500:\n    description: Internal server error", "parameters": [], "responses": {"200": {"description": "Successful operation"}, "400": {"description": "Bad request"}, "500": {"description": "Internal server error"}}}}, "/api/v1/merge_and_categorize": {"post": {"summary": "Merge and categorize credit card data", "description": "Merge and categorize credit card data from multiple sources", "responses": {"200": {"description": "Successful operation"}, "404": {"description": "No CSV files found"}, "500": {"description": "Internal server error"}}}}, "/api/v1/credit_cards/{card_id}": {"get": {"summary": "Get a specific credit card by ID.", "description": "Get a specific credit card by ID.\n---\ntags:\n  - Credit Cards\nparameters:\n  - name: card_id\n    in: path\n    description: ID of the credit card to retrieve\n    required: true\n    type: string\n    example: \"Etihad Guest Platinum Card\"\nresponses:\n  200:\n    description: Credit card details\n    schema:\n      type: object\n      properties:\n        credit_card:\n          type: object\n          description: Credit card details\n  404:\n    description: Credit card not found\n  500:\n    description: Internal server error", "parameters": [{"name": "card_id", "in": "path", "required": true, "type": "string"}], "responses": {"200": {"description": "Successful operation"}, "400": {"description": "Bad request"}, "500": {"description": "Internal server error"}}}}, "/api/v1/survey_responses": {"get": {"summary": "Get all survey responses from the database with optional filtering.", "description": "Get all survey responses from the database with optional filtering.\n---\ntags:\n  - Survey Responses\nparameters:\n  - name: search_term\n    in: query\n    description: Text to search for in all fields of survey responses and recommended cards (GET method)\n    required: false\n    type: string\n  - name: Credit_Score\n    in: query\n    description: Credit score to filter by (GET method)\n    required: false\n    type: integer\n  - name: Monthly_Income\n    in: query\n    description: Monthly income to filter by (GET method)\n    required: false\n    type: string\n  - name: Card_Type\n    in: query\n    description: Card type to filter by (GET method)\n    required: false\n    type: string\n  - name: Rewards\n    in: query\n    description: Rewards type to filter by (GET method)\n    required: false\n    type: string\n  - name: Card_Network\n    in: query\n    description: Card network to filter by (GET method)\n    required: false\n    type: string\n  - name: Islamic\n    in: query\n    description: Whether the card is Islamic (1) or not (0) (GET method)\n    required: false\n    type: integer\n  - name: Interest_Rate\n    in: query\n    description: Interest rate to filter by (GET method)\n    required: false\n    type: string\n  - name: Minimum_Income\n    in: query\n    description: Minimum income requirement to filter by (GET method)\n    required: false\n    type: string\n  - name: body\n    in: body\n    description: Filter criteria in JSON format or plain text search term (POST method)\n    required: false\n    schema:\n      type: object\n      properties:\n        search_term:\n          type: string\n          description: Text to search for in all fields of survey responses and recommended cards\n        Credit_Score:\n          type: integer\n          description: Credit score to filter by\n        Monthly_Income:\n          type: string\n          description: Monthly income to filter by\n        Card_Type:\n          type: string\n          description: Card type to filter by\n        Rewards:\n          type: string\n          description: Rewards type to filter by\n        Card_Network:\n          type: string\n          description: Card network to filter by\n        Islamic:\n          type: integer\n          description: Whether the card is Islamic (1) or not (0)\n        Interest_Rate:\n          type: string\n          description: Interest rate to filter by\n        Minimum_Income:\n          type: string\n          description: Minimum income requirement to filter by\nresponses:\n  200:\n    description: List of all survey responses\n  500:\n    description: Internal server error", "parameters": [], "responses": {"200": {"description": "Successful operation"}, "400": {"description": "Bad request"}, "500": {"description": "Internal server error"}}}}, "/api/v1/credit_cards/filter": {"post": {"summary": "Filter credit cards based on parameters.", "description": "Filter credit cards based on parameters.\n---\ntags:\n  - Credit Cards\nparameters:\n  - name: search_term\n    in: query\n    description: Text to search for in all fields of credit cards (GET method)\n    required: false\n    type: string\n  - name: Credit_Score\n    in: query\n    description: Credit score to filter by (GET method)\n    required: false\n    type: integer\n  - name: Monthly_Income\n    in: query\n    description: Monthly income to filter by (GET method)\n    required: false\n    type: string\n  - name: Card_Type\n    in: query\n    description: Card type to filter by (GET method)\n    required: false\n    type: string\n  - name: Rewards\n    in: query\n    description: Rewards type to filter by (GET method)\n    required: false\n    type: string\n  - name: Card_Network\n    in: query\n    description: Card network to filter by (GET method)\n    required: false\n    type: string\n  - name: Islamic\n    in: query\n    description: Whether the card is Islamic (1) or not (0) (GET method)\n    required: false\n    type: integer\n  - name: Interest_Rate\n    in: query\n    description: Interest rate to filter by (GET method)\n    required: false\n    type: string\n  - name: Minimum_Income\n    in: query\n    description: Minimum income requirement to filter by (GET method)\n    required: false\n    type: string\n  - name: body\n    in: body\n    description: Filter criteria in JSON format or plain text search term (POST method)\n    required: false\n    schema:\n      type: object\n      properties:\n        search_term:\n          type: string\n          description: Text to search for in all fields of credit cards\n        Credit_Score:\n          type: integer\n          description: Credit score to filter by\n        Monthly_Income:\n          type: string\n          description: Monthly income to filter by\n        Card_Type:\n          type: string\n          description: Card type to filter by\n        Rewards:\n          type: string\n          description: Rewards type to filter by\n        Card_Network:\n          type: string\n          description: Card network to filter by\n        Islamic:\n          type: integer\n          description: Whether the card is Islamic (1) or not (0)\n        Interest_Rate:\n          type: string\n          description: Interest rate to filter by\n        Minimum_Income:\n          type: string\n          description: Minimum income requirement to filter by\nresponses:\n  200:\n    description: List of filtered credit cards\n  400:\n    description: No filter parameters provided\n  500:\n    description: Internal server error", "parameters": [], "responses": {"200": {"description": "Successful operation"}, "400": {"description": "Bad request"}, "500": {"description": "Internal server error"}}}, "get": {"summary": "Filter credit cards based on parameters.", "description": "Filter credit cards based on parameters.\n---\ntags:\n  - Credit Cards\nparameters:\n  - name: search_term\n    in: query\n    description: Text to search for in all fields of credit cards (GET method)\n    required: false\n    type: string\n  - name: Credit_Score\n    in: query\n    description: Credit score to filter by (GET method)\n    required: false\n    type: integer\n  - name: Monthly_Income\n    in: query\n    description: Monthly income to filter by (GET method)\n    required: false\n    type: string\n  - name: Card_Type\n    in: query\n    description: Card type to filter by (GET method)\n    required: false\n    type: string\n  - name: Rewards\n    in: query\n    description: Rewards type to filter by (GET method)\n    required: false\n    type: string\n  - name: Card_Network\n    in: query\n    description: Card network to filter by (GET method)\n    required: false\n    type: string\n  - name: Islamic\n    in: query\n    description: Whether the card is Islamic (1) or not (0) (GET method)\n    required: false\n    type: integer\n  - name: Interest_Rate\n    in: query\n    description: Interest rate to filter by (GET method)\n    required: false\n    type: string\n  - name: Minimum_Income\n    in: query\n    description: Minimum income requirement to filter by (GET method)\n    required: false\n    type: string\n  - name: body\n    in: body\n    description: Filter criteria in JSON format or plain text search term (POST method)\n    required: false\n    schema:\n      type: object\n      properties:\n        search_term:\n          type: string\n          description: Text to search for in all fields of credit cards\n        Credit_Score:\n          type: integer\n          description: Credit score to filter by\n        Monthly_Income:\n          type: string\n          description: Monthly income to filter by\n        Card_Type:\n          type: string\n          description: Card type to filter by\n        Rewards:\n          type: string\n          description: Rewards type to filter by\n        Card_Network:\n          type: string\n          description: Card network to filter by\n        Islamic:\n          type: integer\n          description: Whether the card is Islamic (1) or not (0)\n        Interest_Rate:\n          type: string\n          description: Interest rate to filter by\n        Minimum_Income:\n          type: string\n          description: Minimum income requirement to filter by\nresponses:\n  200:\n    description: List of filtered credit cards\n  400:\n    description: No filter parameters provided\n  500:\n    description: Internal server error", "parameters": [], "responses": {"200": {"description": "Successful operation"}, "400": {"description": "Bad request"}, "500": {"description": "Internal server error"}}}}, "/api/v1/survey_responses/{survey_id}": {"get": {"summary": "Get a specific survey response by ID.", "description": "Get a specific survey response by ID.\n---\ntags:\n  - Survey Responses\nparameters:\n  - name: survey_id\n    in: path\n    description: ID of the survey response to retrieve\n    required: true\n    type: string\n    example: \"survey_123456\"\nresponses:\n  200:\n    description: Survey response details\n    schema:\n      type: object\n      properties:\n        survey_response:\n          type: object\n          properties:\n            survey_id:\n              type: string\n              description: ID of the survey\n            survey_data:\n              type: object\n              description: Survey response data\n            recommended_cards:\n              type: array\n              description: List of recommended cards\n              items:\n                type: object\n            timestamp:\n              type: string\n              description: Timestamp when the survey was submitted\n  404:\n    description: Survey response not found\n  500:\n    description: Internal server error", "parameters": [{"name": "survey_id", "in": "path", "required": true, "type": "string"}], "responses": {"200": {"description": "Successful operation"}, "400": {"description": "Bad request"}, "500": {"description": "Internal server error"}}}}}}